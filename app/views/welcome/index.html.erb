<div class="container">
  <h1>Welcome to Turing School's Quantified Self API!</h1>

  <div class="instructions">
    <p>The following endpoints are available. All endpoints will return the data as JSON.</p>

    <div class="api">
      <p>Food Endpoints:</p>
      <ul>
        <li><code>GET api/v1/foods</code> - returns all foods currently in the database</li>

        <li><code>GET api/v1/foods/:id</code> - returns the food object with the specific id you've passed in</li>

        <li><code>POST api/v1/foods</code> - allows creating a new food with the parameters: <br><code>{ food: { name: "Name of food here", calories: "Calories here"} }</code><br> If food is successfully created, the food item will be returned. Both name and calories are required fields.</li>

        <li><code>PATCH api/v1/foods/:id</code> - allows one to update an existing food with the parameters:<br> <code>{ food: { name: "Name of food here", calories: "Calories here"} }</code><br> If food is successfully updated, the food item will be returned.</li>

        <li><code>DELETE api/v1/foods/:id</code> - will delete the food with the id passed in</li>
      </ul>
    </div>

    <div class="api">
      <p>Meal Endpoints:</p>
      <ul>
        <li><code>POST api/v1/meals/:meal_id/foods/:id</code> - adds the food with <code>:id</code> to the meal with <code>:meal_id</code><br>This creates a new record in the MealFoods table to establish the relationship between this food and meal.

        <li><code>DELETE api/v1/meals/:meal_id/foods/:id</code> - removes the food with <code>:id</code> from the meal with <code>:meal_id</code><br>This deletes the existing record in the MealFoods table that creates the relationship between this food and meal.
      </ul>
    </div>
  </div>
</div>
